check host consul-dns with address 127.0.0.1
  if failed
    port 53
  then exec "/usr/local/bin/dns_forwarding.sh"

check host chronyd with address 127.0.0.1
  start program = "/usr/sbin/service chronyd start"
  stop program = "/usr/sbin/service chronyd stop"
  if failed
    port 123
    type udp
    for 2 cycles
  then restart

check host CONSUL with address {{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}
  start program = "/usr/sbin/service consul start"
  stop program = "/usr/sbin/service consul stop"
  if failed port 8600 for 2 cycles then restart

{% if 'logstash' in group_names %}
check host LOGSTASH with address {{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}
  start program = "/usr/sbin/service logstash start"
  stop program = "/usr/sbin/service logstash stop"
  if failed
    port {{ logstash_beats_port }}
    for 3 cycles
  then restart
  if 3 restarts within 10 cycles then stop
{% endif %}
{% if 'kibana' in group_names %}
check process KIBANA with pidfile /tmp/kibana.pid
  start program = "/usr/sbin/service kibana start"
  stop program = "/usr/sbin/service kibana stop"
  if failed
    port {{ kibana_port }}
    for 2 cycles
  then restart
  if 3 restarts within 10 cycles then stop
{% endif %}
{% if 'elasticsearch' in group_names %}
check host ELASTICSEARCH with address {{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}
  if failed port {{ elastic_http_port }} for 3 cycles then alert
{% endif %}
